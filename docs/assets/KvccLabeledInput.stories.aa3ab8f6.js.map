{"version":3,"file":"KvccLabeledInput.stories.aa3ab8f6.js","sources":["../../src/types/input.ts","../../src/stories/KvccLabeledInput.vue"],"sourcesContent":["export const INPUT_TYPES = [\n  \"text\",\n  \"search\",\n  \"datalist\",\n  \"password\",\n  \"select\",\n] as const;\n\nexport type InputType = typeof INPUT_TYPES[number];\n\nexport const isInputType = (value: unknown): value is InputType => {\n  if (typeof value !== \"string\") return false;\n  return INPUT_TYPES.includes(value as InputType);\n};\n","<script setup lang=\"ts\">\nimport type { InputType } from \"../types/input\";\n\ninterface Props {\n  label: string;\n  type: InputType;\n  id: string;\n  required: boolean;\n  listId: string;\n}\n\ndefineProps<Props>();\n\nconst emit = defineEmits([\"change\", \"input\", \"select\"]);\n\nconst emitEvent = (kind: Parameters<typeof emit>[0], event: Event) => {\n  if (!event.target) {\n    console.error(\"No target found in event\");\n    return;\n  }\n\n  emit(kind, (event.target as HTMLInputElement | HTMLSelectElement).value);\n};\n\nconst handleChange = (event: Event) => emitEvent(\"change\", event);\nconst handleInput = (event: Event) => emitEvent(\"input\", event);\nconst handleSelect = (event: Event) => emitEvent(\"select\", event);\n</script>\n\n<template>\n  <article>\n    <label :for=\"id\">{{ label }}</label>\n    <input\n      v-if=\"['text', 'search', 'datalist', 'password'].includes(type)\"\n      @change=\"handleChange\"\n      @input=\"handleInput\"\n      :type=\"type\"\n      :id=\"id\"\n      :name=\"id\"\n      :list=\"listId\"\n      :required=\"required\"\n    />\n    <select\n      v-else-if=\"type === 'select'\"\n      @change=\"handleChange\"\n      @select=\"handleSelect\"\n      :id=\"id\"\n      :name=\"id\"\n    >\n      <!-- Allow a slot for options directly if this is a select input. -->\n      <slot />\n    </select>\n  </article>\n</template>\n\n<style>\narticle {\n  position: relative;\n}\n\nlabel {\n  position: absolute;\n  top: 0;\n  left: 0;\n  margin-bottom: 0.25rem;\n  margin-top: 0.5rem;\n  margin-left: 0.75rem;\n  color: #1f2937;\n  font-size: 0.75rem;\n  line-height: 1rem;\n  font-weight: 100;\n  pointer-events: none;\n}\n\ninput,\nselect {\n  padding-left: 0.75rem;\n  padding-right: 0.75rem;\n  padding-bottom: 0.5rem;\n  padding-top: 1.5rem;\n  background-color: #ffffff;\n  transition-property: all;\n  transition-duration: 300ms;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  width: 100%;\n  border-radius: 0.25rem;\n  border-width: 1px;\n  border-color: #6b7280;\n  appearance: none;\n  outline: 0;\n  box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);\n}\n\ninput:hover,\nselect:hover {\n  background-color: #ffffff;\n  border-color: #1d4ed8;\n}\n</style>\n"],"names":["INPUT_TYPES","emitEvent","kind","event","emit","handleChange","handleInput","handleSelect"],"mappings":"4FAAO,MAAMA,EAAc,CACzB,OACA,SACA,WACA,WACA,QACF,iOCSM,MAAAC,EAAY,CAACC,EAAkCC,IAAiB,CAChE,GAAA,CAACA,EAAM,OAAQ,CACjB,QAAQ,MAAM,0BAA0B,EACxC,MACF,CAEKC,EAAAF,EAAOC,EAAM,OAAgD,KAAK,CAAA,EAGnEE,EAAgBF,GAAiBF,EAAU,SAAUE,CAAK,EAC1DG,EAAeH,GAAiBF,EAAU,QAASE,CAAK,EACxDI,EAAgBJ,GAAiBF,EAAU,SAAUE,CAAK"}